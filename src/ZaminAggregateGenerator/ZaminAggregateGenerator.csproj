<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
	<Authors>Sajad Mirzaei Manesh</Authors>
	<RepositoryUrl>https://github.com/sajad-mirzaei/ZaminAggregateGenerator</RepositoryUrl>
	<GenerateDocumentationFile>False</GenerateDocumentationFile>
	<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	<Title>Zamin Aggregate Generator</Title>
	<Company>Samaneh Andishmand Pegah</Company>
	<Description>      <![CDATA[
        A Package to quickly create the files of an aggregate in the Zamin project

        AggregationGen is a NuGet package designed to streamline and accelerate the process of creating Aggregation files across various layers of your API project. Aggregation files play a crucial role in combining related data and facilitating efficient data retrieval in modern software systems. However, generating these files manually can be time-consuming and error-prone. AggregationGen aims to provide a seamless solution to this challenge by automating the file generation process and enhancing the overall project build speed.

        Getting Started:
        Getting started with AggregationGen is straightforward. Simply install the NuGet package into your API project and follow the provided documentation to configure and utilize the package effectively. With AggregationGen, you'll experience improved code organization, enhanced data retrieval capabilities, and an optimized development workflow.
        Empower your API project with the efficiency and speed of AggregationGen. Say goodbye to manual Aggregation file creation and embrace an automated approach to enhance your development process.
      ]]></Description>
	<PackageProjectUrl>https://github.com/sajad-mirzaei/ZaminAggregateGenerator</PackageProjectUrl>
	<PackageTags>Zamin Aggregate Generator</PackageTags>
	<PackageReadmeFile>README.md</PackageReadmeFile>
	<SignAssembly>False</SignAssembly>
	<Version>1.0.1</Version>
	<IncludeSymbols>False</IncludeSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Optimize>False</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.4.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Commands\CreateAggregateName\CreateAggregateNameCommandHandler.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Commands\CreateAggregateName\CreateAggregateNameValidator.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Queries\GetAggregateNameById\GetAggregateNameByIdHandler.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Queries\GetAggregateNameById\GetAggregateNameByIdValidator.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Queries\GetAggregatePlural\GetAggregateNameQueryHandler.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.ApplicationService\AggregatePlural\Queries\GetAggregatePlural\GetAggregateNameQueryValidator.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Commands\CreateAggregateName\CreateAggregateNameCommand.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Commands\IAggregateNameCommandRepository.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\IAggregateNameDomainService.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Queries\GetAggregateNameById\AggregateNameByIdDto.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Queries\GetAggregateNameById\GetAggregateNameByIdQuery.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Queries\GetAggregatePlural\AggregateNameDto.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Queries\GetAggregatePlural\GetAggregateNameQuery.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Contracts\AggregatePlural\Queries\IAggregateNameQueryRepository.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Domain\AggregatePlural\Entities\AggregateName.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Core.Domain\AggregatePlural\Events\AggregateNameCreated.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Endpoints.API\AggregatePlural\AggregateNameController.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Infra.Data.Sql.Commands\AggregatePlural\AggregateNameCommandRepository.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Infra.Data.Sql.Commands\AggregatePlural\Configs\AggregateNameConfig.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Infra.Data.Sql.Queries\AggregatePlural\AggregateNameQueryRepository.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Template\Infra.Data.Sql.Queries\Common\Models\AggregateName.csharp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
